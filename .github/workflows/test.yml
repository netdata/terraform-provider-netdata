# Terraform Provider testing workflow.
name: Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  schedule:
      - cron: '35 11 * * *'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  # Ensure project builds before running testing matrix
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@3a919529898de77ec3da873e3063ca4b10e7f5cc # v3.7.0
        with:
          version: latest
          args: --timeout 10m0s

  generate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go generate ./...
      - name: git diff
        run: |
          git diff --compact-summary --exit-code || \
            (echo; echo "Unexpected difference in directories after code generation. Run 'go generate ./...' command and commit."; exit 1)
      - name: Check generated docs
        run: |
          go install "github.com/hashicorp/terraform-plugin-docs/cmd/tfplugindocs"
          make docs
          git diff --exit-code

  # Run acceptance tests in a matrix with Terraform CLI versions
  test:
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@633666f66e0061ca3b725c73b2ec20cd13a8fdd1 # v2.0.3
        with:
          terraform_version: 'latest'
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
          NETDATA_CLOUD_URL: "${{ secrets.NETDATA_CLOUD_URL }}"
          NETDATA_CLOUD_AUTH_TOKEN: "${{ secrets.NETDATA_CLOUD_AUTH_TOKEN }}"
          SPACE_ID_NON_COMMUNITY: "${{ secrets.SPACE_ID_NON_COMMUNITY }}"
        run: go test -v -cover ./internal/provider/
        timeout-minutes: 10
      - name: run sweepers
        env:
          NETDATA_CLOUD_URL: "${{ secrets.NETDATA_CLOUD_URL }}"
          NETDATA_CLOUD_AUTH_TOKEN: "${{ secrets.NETDATA_CLOUD_AUTH_TOKEN }}"
          SPACE_ID_NON_COMMUNITY: "${{ secrets.SPACE_ID_NON_COMMUNITY }}"
        run: go test ./... -sweep empty

  notify:
    name: Notify if fails when scheduled
    needs: [build, generate, test]
    runs-on: ubuntu-latest
    if: ${{ always() && contains(needs.*.result, 'failure') && github.event_name == 'schedule' }}
    timeout-minutes: 5
    steps:
      - name: add new github issue
        uses: dacbd/create-issue-action@v1.2.1
        with:
          token: ${{ secrets.NETDATABOT_GITHUB_TOKEN }}
          repo: infra
          title: Failed terraform-provider-netdata test
          body: |
            [Failed job](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
